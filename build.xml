<?xml version="1.0"?>
<project name="lab3" default="build">
    <property file="build.properties"/>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="/usr/share/ant/lib/ant-contrib.jar"/>
        </classpath>
    </taskdef>
    <path id="classpath.source">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="compile" depends="native2ascii">
        <mkdir dir="${compiled.classes}"/>
        <mkdir dir="${compiled.tests}"/>
        <javac destdir="${compiled.classes}" includeantruntime="false">
            <src path="${main}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.source"/>
            </classpath>
        </javac>
        <javac destdir="${compiled.tests}" includeantruntime="false">
            <src path="${test}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.source"/>
            </classpath>
        </javac>
    </target>

    <target name="build" depends="compile">
        <jar destfile="${dest.jar}" basedir="${compiled.classes}" compress="false" index="true">
            <manifest>
                <attribute name="Main-Class" value="main.Main"/>
            </manifest>
        </jar>
        <!--        <war destfile = "${compiled}/${dest.war}" webxml = "${web.dir.inf}/web.xml">-->
        <!--            <classes dir="${compiled.classes}" />-->
        <!--            <fileset dir="${web.dir}" />-->
        <!--            <lib dir="${lib}"/>-->
        <!--        </war>-->
    </target>

    <target name="native2ascii">
        <native2ascii src="./src/main/resources_nc" dest="./src/main/resources"
                      includes="*.properties" ext=".properties"/>
    </target>

    <target name="clean">
        <delete dir="${compiled}"/>
    </target>

    <target name="xml">
        <xmlvalidate lenient="yes">
            <fileset dir="." includes="*/*.xml"/>
        </xmlvalidate>
    </target>

    <target name="test" depends="build">

        <junit fork="true" printsummary="on">
            <formatter type="xml"/>
            <classpath>
                <path refid="classpath.source"/>
                <pathelement location="${compiled.classes}"/>
                <pathelement location="${compiled.tests}"/>
            </classpath>
            <batchtest todir="reports">
                <fileset dir="${test}" includes="*Test*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="history">
        <trycatch>
            <try>
                <runtarget target="compile"/>
            </try>
            <catch>
                <exec executable="bash" outputproperty="git_log_head">
                    <arg value="-c"/>
                    <arg value="git log --pretty=format:%H | head -1"/>
                </exec>
                <exec executable="bash" outputproperty="git_log_tail">
                    <arg value="-c"/>
                    <arg value="git log --pretty=format:%H | tail -1"/>
                </exec>
                <if>
                    <equals arg1="${git_log_head}" arg2="${git_log_tail}"/>
                    <then>
                        <echo message="I cannot build the first commit. Stop"/>
                    </then>
                    <else>
                        <exec executable="bash">
                            <arg value="-c"/>
                            <arg value="git reset HEAD~1 --hard"/>
                        </exec>
                        <runtarget target="history"/>
                    </else>
                </if>
            </catch>
        </trycatch>
    </target>
    <target name="env" depends="build">
        <echo message="Executing: ${java} ${params} -jar ${dest.jar}"/>

        <exec executable="bash">
            <arg value="-c"/>
            <arg value="${java} ${params} -jar ${dest.jar}"/>
        </exec>
    </target>
</project>